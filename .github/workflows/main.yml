name: Spanish Mod

on:
  push:
    branches:
      - master
    paths:
      - 'MsgEditorLT/Data/**'
  pull_request:
    branches:
      - master
    paths:
      - 'MsgEditorLT/Data/**'

jobs:
  process_and_compile_files:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      # Check out the repository code
      uses: actions/checkout@v4

    - name: Set up Python
      # Set up Python environment
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: SET N
      # Run setn_folder.py script
      run: python MsgEditorLT/setn_folder.py

    - name: IMPORT TO PARAMS
      # Run import_msg_params.py script
      run: python MsgEditorLT/import_msg_params.py

    - name: COMPILE
      # Compile using compiler.py script
      run: python MsgEditorLT/compiler.py

    - name: Upload compiled artifact
      # Upload the compiled files as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: spanish-mod-dev
        path: MsgEditorLT/compiled/
        if-no-files-found: warn

  create_pre_release:
    needs: process_and_compile_files
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: spanish-mod-dev
        path: ./compiled

    - name: Get latest artifact
      run: |
        LATEST_ARTIFACT=$(find ./compiled -type f -printf "%T@ %p\n" | sort -n | tail -n 1 | cut -d ' ' -f 2-)
        echo "::set-output name=latest_artifact::$LATEST_ARTIFACT"

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: ${{ steps.get_latest.outputs.latest_artifact }}
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: v0.0.0-$(date +'%Y%m%d%H%M%S')
        name: Pre-release
        body: Commit.
        draft: false
        prerelease: true
        generateReleaseNotes: false
        makeLatest: legacy
        omitBody: false
        omitBodyDuringUpdate: false
        omitDraftDuringUpdate: false
        omitName: false
        omitNameDuringUpdate: false
        omitPrereleaseDuringUpdate: false
        removeArtifacts: false
        replacesArtifacts: true
        skipIfReleaseExists: false
        updateOnlyUnreleased: false